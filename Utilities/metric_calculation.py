# Predicitions and labels are 2D array/list containing the predictions/labels for each entry
# as an example:
# predictions with k = 3 : [[1,200,300], [5, 10, 20], [3,5,10], ...]
# labels : [[1,2], [5,10,20,30,40,50], [3,5,100], ...]
def metric_calculation(predictions, labels):
    sum_recall_1 = 0
    sum_recall_2 = 0
    sum_recall_3 = 0
    sum_precision_1 = 0
    sum_precision_2 = 0
    sum_precision_3 = 0
    num_test_data = len(predictions)
    # make sure that predictions and labels lists have the same length
    for i in range(len(predictions)):
        correct_prediction = 0
        actual_label = labels[i]
        # k = 1
        if predictions[i][0] in actual_label:
            correct_prediction += 1
        sum_precision_1 += (correct_prediction / 1)
        sum_recall_1 += (correct_prediction / len(actual_label))

        # k = 2
        if predictions[i][1] in actual_label:
            correct_prediction += 1
        sum_precision_2 += (correct_prediction / 2)
        sum_recall_2 += (correct_prediction / len(actual_label))

        # k = 3
        if predictions[i][2] in actual_label:
            correct_prediction += 1
        sum_precision_3 += (correct_prediction / 3)
        sum_recall_3 += (correct_prediction / len(actual_label))

    # Divide by numer of test data
    precision_1 = sum_precision_1 / num_test_data
    precision_2 = sum_precision_2 / num_test_data
    precision_3 = sum_precision_3 / num_test_data
    recall_1 = sum_recall_1 / num_test_data
    recall_2 = sum_recall_2 / num_test_data
    recall_3 = sum_recall_3 / num_test_data
    f1_1 = 2 * precision_1 * recall_1 / (precision_1 + recall_1)
    f1_2 = 2 * precision_2 * recall_2 / (precision_2 + recall_2)
    f1_3 = 2 * precision_3 * recall_3 / (precision_3 + recall_3)

    print("K = 1")
    print("P@1 = " + precision_1.__str__())
    print("R@1 = " + recall_1.__str__())
    print("F@1 = " + f1_1.__str__())

    print("K = 2")
    print("P@2 = " + precision_2.__str__())
    print("R@2 = " + recall_2.__str__())
    print("F@2 = " + f1_2.__str__())

    print("K = 3")
    print("P@3 = " + precision_3.__str__())
    print("R@3 = " + recall_3.__str__())
    print("F@3 = " + f1_3.__str__())
